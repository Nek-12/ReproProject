[versions]
accompanist = "0.32.0"
arrow = "1.2.0"
atomicfu = "0.22.0"
coil = "2.4.0"
coilTransformations = "2.0.2"
collection-ktx = "1.3.0-rc01"
compose = "1.6.0-alpha05"
compose-activity = "1.8.0-alpha07"
compose-compiler = "1.5.3"
compose-constraintLayout = "1.1.0-alpha12"
compose-destinations = "1.9.52"
compose-dialogs = "1.2.0"
compose-material3 = "1.2.0-alpha07"
compose-navigation = "2.7.1"
compose-reorderable = "0.9.6"
core-ktx = "1.12.0-rc01"
kmmutils = "1.2.0"
coroutines = "1.7.3"
datetime = "0.4.1"
dependencyAnalysisPlugin = "1.21.0"
detekt = "1.23.1"
flowExt = "0.7.1"
gradle-analytics-plugin = "1.0.1"
gradleAndroid = "8.2.0-beta02"
gradleDoctorPlugin = "0.8.1"
kermit = "2.0.0-RC5"
koin = "3.4.3"
koinCompose = "3.4.6"
kotest = "5.7.2"
# @pin
kotlin = "1.9.10"
# @pin
ksp = "1.9.10-1.0.13"
ktor = "2.3.4"
libsu = "5.1.0"
lifecycle = "2.6.1"
mockk = "1.13.7"
okhttp-logging = "5.0.0-alpha.11"
paging = "3.2.1"
palette-ktx = "1.0.0"
serialization = "1.6.0"
sqlDelight = "2.0.0-rc02"
versionCatalogUpdatePlugin = "0.8.1"
versionsPlugin = "0.47.0"
apiresult = "1.0.1"

[libraries]
accompanist-drawablePainter = { module = "com.google.accompanist:accompanist-drawablepainter", version.ref = "accompanist" }
accompanist-navMaterial = { module = "com.google.accompanist:accompanist-navigation-material", version.ref = "accompanist" }
accompanist-permissions = { module = "com.google.accompanist:accompanist-permissions", version.ref = "accompanist" }
accompanist-placeholder = { module = "com.google.accompanist:accompanist-placeholder-material", version.ref = "accompanist" }
accompanist-systemUiController = { module = "com.google.accompanist:accompanist-systemuicontroller", version.ref = "accompanist" }
android-gradle = { module = "com.android.tools.build:gradle", version.ref = "gradleAndroid" }
androidx-collection = { module = "androidx.collection:collection-ktx", version.ref = "collection-ktx" }
androidx-core = { module = "androidx.core:core-ktx", version.ref = "core-ktx" }
arrow = { module = "io.arrow-kt:arrow-core", version.ref = "arrow" }
atomicfu = { module = "org.jetbrains.kotlinx:atomicfu", version.ref = "atomicfu" }
atomicfu-gradle = { module = "org.jetbrains.kotlinx:atomicfu-gradle-plugin", version.ref = "atomicfu" }
coil = { module = "io.coil-kt:coil", version.ref = "coil" }
coil-compose = { module = "io.coil-kt:coil-compose", version.ref = "coil" }
coil-transformations = { module = "com.github.Commit451.coil-transformations:transformations", version.ref = "coilTransformations" }
compose-activity = { module = "androidx.activity:activity-compose", version.ref = "compose-activity" }
compose-animation = { module = "androidx.compose.animation:animation", version.ref = "compose" }
compose-constraintlayout = { module = "androidx.constraintlayout:constraintlayout-compose", version.ref = "compose-constraintLayout" }
compose-destinations = { module = "io.github.raamcosta.compose-destinations:animations-core", version.ref = "compose-destinations" }
compose-destinations-ksp = { module = "io.github.raamcosta.compose-destinations:ksp", version.ref = "compose-destinations" }
compose-dialogs = { module = "com.maxkeppeler.sheets-compose-dialogs:core", version.ref = "compose-dialogs" }
compose-dialogs-calendar = { module = "com.maxkeppeler.sheets-compose-dialogs:calendar", version.ref = "compose-dialogs" }
compose-dialogs-clock = { module = "com.maxkeppeler.sheets-compose-dialogs:clock", version.ref = "compose-dialogs" }
compose-dialogs-colorpicker = { module = "com.maxkeppeler.sheets-compose-dialogs:color", version.ref = "compose-dialogs" }
compose-dialogs-datetime = { module = "com.maxkeppeler.sheets-compose-dialogs:date-time", version.ref = "compose-dialogs" }
compose-dialogs-duration = { module = "com.maxkeppeler.sheets-compose-dialogs:duration", version.ref = "compose-dialogs" }
compose-dialogs-info = { module = "com.maxkeppeler.sheets-compose-dialogs:info", version.ref = "compose-dialogs" }
compose-foundation = { module = "androidx.compose.foundation:foundation", version.ref = "compose" }
compose-graphics = { module = "androidx.compose.animation:animation-graphics", version.ref = "compose" }
compose-material2 = { module = "androidx.compose.material:material", version.ref = "compose" }
compose-material3 = { module = "androidx.compose.material3:material3", version.ref = "compose-material3" }
compose-navigation = { module = "androidx.navigation:navigation-compose", version.ref = "compose-navigation" }
compose-paging = { module = "androidx.paging:paging-compose", version.ref = "paging" }
compose-preview = { module = "androidx.compose.ui:ui-tooling-preview", version.ref = "compose" }
compose-reorderable = { module = "org.burnoutcrew.composereorderable:reorderable", version.ref = "compose-reorderable" }
compose-runtime = { module = "androidx.compose.runtime:runtime", version.ref = "compose" }
compose-testing = { module = "androidx.compose.ui:ui-test-junit4", version.ref = "compose" }
compose-tooling = { module = "androidx.compose.ui:ui-tooling", version.ref = "compose" }
compose-ui = { module = "androidx.compose.ui:ui", version.ref = "compose" }
compose-viewmodel = { module = "androidx.lifecycle:lifecycle-viewmodel-compose", version.ref = "lifecycle" }
compose-windowsizeclass = { module = "androidx.compose.material3:material3-window-size-class", version.ref = "compose-material3" }
flowext = { module = "io.github.hoc081098:FlowExt-jvm", version.ref = "flowExt" }
kermit = { module = "co.touchlab:kermit", version.ref = "kermit" }
koin-android = { module = "io.insert-koin:koin-android", version.ref = "koin" }
koin-compose = { module = "io.insert-koin:koin-androidx-compose", version.ref = "koinCompose" }
koin-test = { module = "io.insert-koin:koin-test", version.ref = "koin" }
koin-workmanager = { module = "io.insert-koin:koin-androidx-workmanager", version.ref = "koin" }
kotest-assertions = { module = "io.kotest:kotest-assertions-core", version.ref = "kotest" }
kotlin-coroutines = { module = "org.jetbrains.kotlinx:kotlinx-coroutines-android", version.ref = "coroutines" }
kotlin-gradle = { module = "org.jetbrains.kotlin:kotlin-gradle-plugin", version.ref = "kotlin" }
kotlin-reflect = { module = "org.jetbrains.kotlin:kotlin-reflect", version.ref = "kotlin" }
kotlin-serialization-core = { module = "org.jetbrains.kotlinx:kotlinx-serialization-core", version.ref = "serialization" }
kotlin-serialization-json = { module = "org.jetbrains.kotlinx:kotlinx-serialization-json", version.ref = "serialization" }
kotlin-stdlib = { module = "org.jetbrains.kotlin:kotlin-stdlib", version.ref = "kotlin" }
kotlinx-datetime = { module = "org.jetbrains.kotlinx:kotlinx-datetime", version.ref = "datetime" }
ksp-gradle = { module = "com.google.devtools.ksp:com.google.devtools.ksp.gradle.plugin", version.ref = "ksp" }
ktor-auth = { module = "io.ktor:ktor-client-auth", version.ref = "ktor" }
ktor-contentNegotiation = { module = "io.ktor:ktor-client-content-negotiation", version.ref = "ktor" }
ktor-core = { module = "io.ktor:ktor-client-core", version.ref = "ktor" }
ktor-encoding = { module = "io.ktor:ktor-client-encoding", version.ref = "ktor" }
ktor-engine = { module = "io.ktor:ktor-client-cio", version.ref = "ktor" }
ktor-logging = { module = "io.ktor:ktor-client-logging", version.ref = "ktor" }
ktor-serialization = { module = "io.ktor:ktor-serialization-kotlinx-json", version.ref = "ktor" }
mockk = { module = "io.mockk:mockk", version.ref = "mockk" }
mockk-android = { module = "io.mockk:mockk-android", version.ref = "mockk" }
mockk-jvm = { module = "io.mockk:mockk-agent-jvm", version.ref = "mockk" }
okhttp-logging = { module = "com.squareup.okhttp3:logging-interceptor", version.ref = "okhttp-logging" }
paging = { module = "androidx.paging:paging-runtime", version.ref = "paging" }
paging-common = { module = "androidx.paging:paging-common", version.ref = "paging" }
paging-compose = { module = "androidx.paging:paging-compose", version.ref = "paging" }
palette = { module = "androidx.palette:palette-ktx", version.ref = "palette-ktx" }
apiresult = { module = "pro.respawn.apiresult:core", version.ref = "apiresult" }
kmmutils-common = { module = "pro.respawn.kmmutils:common", version.ref = "kmmutils" }
kmmutils-coroutines = { module = "pro.respawn.kmmutils:coroutines", version.ref = "kmmutils" }

[bundles]
compose = [
    "accompanist-drawablePainter",
    "compose-activity",
    "compose-animation",
    "compose-constraintlayout",
    "compose-foundation",
    "compose-graphics",
    "compose-material3",
    "compose-navigation",
    "compose-preview",
    "compose-ui",
    "compose-viewmodel",
]
ktor = [
    "ktor-auth",
    "ktor-contentNegotiation",
    "ktor-core",
    "ktor-encoding",
    "ktor-engine",
    "ktor-logging",
    "ktor-serialization",
]
serialization = [
    "kotlin-serialization-core",
    "kotlin-serialization-json",
    "kotlin-reflect"
]
utils = [
    "apiresult",
    "kmmutils-common",
    "kmmutils-coroutines",
]

[plugins]
atomicfu = { id = "kotlinx-atomicfu", version.ref = "atomicfu" }
dependencyAnalysis = { id = "com.autonomousapps.dependency-analysis", version.ref = "dependencyAnalysisPlugin" }
detekt = { id = "io.gitlab.arturbosch.detekt", version.ref = "detekt" }
gradle-analytics = { id = "io.github.janbarari.gradle-analytics-plugin", version.ref = "gradle-analytics-plugin" }
gradleDoctor = { id = "com.osacky.doctor", version.ref = "gradleDoctorPlugin" }
ksp = { id = "com.google.devtools.ksp", version.ref = "ksp" }
parcelize = { id = "org.jetbrains.kotlin.plugin.parcelize", version.ref = "kotlin" }
serialization = { id = "org.jetbrains.kotlin.plugin.serialization", version.ref = "kotlin" }
sqldelight = { id = "app.cash.sqldelight", version.ref = "sqlDelight" }
version-catalog-update = { id = "nl.littlerobots.version-catalog-update", version.ref = "versionCatalogUpdatePlugin" }
versions = { id = "com.github.ben-manes.versions", version.ref = "versionsPlugin" }
